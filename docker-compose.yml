version: "3.6"

volumes:
  db_data:
  redis_data:

networks:
  default:

services:
  api:
    container_name: bobarr-api
    build:
      context: ./packages/api
    depends_on:
      - postgres
      - redis
      - transmission
      - jackett
    env_file: .env
    volumes:
      - ./library:/usr/library
    command: yarn start:prod
    restart: unless-stopped

  web:
    container_name: bobarr-web
    build:
      context: ./packages/web
    depends_on:
      - api
    env_file: .env
    command: yarn start
    restart: unless-stopped

  postgres:
    container_name: bobarr-postgresql
    image: postgres:12-alpine
    env_file: .env
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    container_name: bobarr-redis
    image: bitnami/redis:5.0.6
    env_file: .env
    restart: unless-stopped
    volumes:
      - redis_data:/bitnami/redis/data

  jackett:
    image: linuxserver/jackett
    container_name: bobarr-jacket
    env_file: .env
    restart: unless-stopped
    volumes:
      - ./packages/jackett/config:/config
      - ./packages/jackett/downloads:/downloads
    ports:
      - 9117:9117

  transmission:
    image: linuxserver/transmission
    container_name: bobarr-transmission
    env_file: .env
    ports:
      - 9091:9091
    restart: unless-stopped
    volumes:
      - ./library/downloads:/downloads
      - ./packages/transmission/config:/config
      - ./packages/transmission/watch:/watch

  nginx:
    image: dperson/nginx
    container_name: bobarr-nginx
    depends_on:
      - api
      - web
    environment:
      - TZ=Europe/Paris
    ports:
      - "3000:80"
    command: -w "http://web:3000;/" -w "http://api:4000/;/api/"
    restart: unless-stopped
